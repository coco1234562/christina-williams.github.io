//////////////////////////////////////////////////////////////////////
// Function 1 - Object Values ////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function objectValues(object) {
    return Object.values(object); 
} 

//////////////////////////////////////////////////////////////////////
// Function 2 - Keys to String ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function keysToString(object) {
  
  var answer =  Object.keys(object); 
  return answer.join(" "); 
}


//////////////////////////////////////////////////////////////////////
// Function 3 - Values to String /////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function valuesToString(obj) {
  var values = Object.values(obj);
  var stringValues = values.filter(value => typeof value === 'string');
  return stringValues.join(' ');
}


//////////////////////////////////////////////////////////////////////
// Function 4 - Array or Object //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function arrayOrObject(collection) {
  if(Array.isArray(collection) === true){
    return 'array'; 
  }else{
    return 'object'; 
  }
}


//////////////////////////////////////////////////////////////////////
// Function 5 - Capitalize Word //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function capitalizeWord(string) {

  const firstLetter = string.charAt(0)
  const firstLetterCap = firstLetter.toUpperCase()
  const remainingLetters = string.slice(1)
  const capitalizedWord = firstLetterCap + remainingLetters
  
  return capitalizedWord; 
  
  }
  
//////////////////////////////////////////////////////////////////////
// Function 6 - Capitalize All Words /////////////////////////////////
//////////////////////////////////////////////////////////////////////

function capitalizeAllWords(string) {
    
  const arr = string.split(" ");
  //loop through each element of the array and capitalize the first letter.
  for (var i = 0; i < arr.length; i++) {
    
      arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);
  
  }
  //Join all the elements of the array back into a string 
  //using a blankspace as a separator 
  const str2 = arr.join(" ");
  return str2; 
      
      
  }
  

//////////////////////////////////////////////////////////////////////
// Function 7 - Welcome Message //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function welcomeMessage(object) {
  
  let string = object.name; 
  let capitalizedString = string.charAt(0).toUpperCase() + string.slice(1);
  console.log(capitalizedString);
  
   return 'Welcome ' + capitalizedString + "!"; //Welcome bert!
}


//////////////////////////////////////////////////////////////////////
// Function 8 - Profile Info /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function profileInfo(object) {
  
  var stringOne = object.name.charAt(0).toUpperCase() + object.name.slice(1);
  
  var stringTwo = object.species.charAt(0).toUpperCase() + object.species.slice(1);
 
 return stringOne + ' is a ' + stringTwo; 

}



//////////////////////////////////////////////////////////////////////
// Function 9 - Maybe Noises /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////


function maybeNoises(object) {
  
  if ('noises' in object && object.noises.length > 0){
    
    return object.noises.join(' '); 
    
  }else  {
    
    return 'there are no noises';
  }

}


//////////////////////////////////////////////////////////////////////
// Function 10 - Has Words ///////////////////////////////////////////
//////////////////////////////////////////////////////////////////////


function hasWord(string, word){
  let cw = string.split(" ");
  for (var i = 0; i < cw.length; i++){
      if (cw[i] == (word)){
          return true;
      }
  }
return false;
}


//////////////////////////////////////////////////////////////////////
// Function 11 - Add Friend //////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function addFriend(name, object) {
  object.friends.push(name);
  return object;
}


//////////////////////////////////////////////////////////////////////
// Function 12 - Is Friend ///////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function isFriend(name, object) {
  if (object.hasOwnProperty("friends")) {
    return object.friends.includes(name);
  }
  return false;
}


//////////////////////////////////////////////////////////////////////
// Function 13 - Non-Friends /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function nonFriends(name, arr){
  var nameList = [];
  var result = [];
  var current = null;
  for(var i=0; i<arr.length; i++){
      if(name === arr[i].name){
          current = arr[i];
      }else{
          nameList.push(arr[i].name);
      }
  }

  if(current === null){
      return nameList;
  }

  for(var i=0; i<nameList.length; i++){
      if(current.friends.indexOf(nameList[i]) == -1){
          result.push(nameList[i]);
      }
  }

  return result;

}






//////////////////////////////////////////////////////////////////////
// Function 14 - Update Object ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function updateObject(object, key, value) {
  object[key] = value;
  return object;
}


//////////////////////////////////////////////////////////////////////
// Function 15 - Remove Properties ///////////////////////////////////
//////////////////////////////////////////////////////////////////////

function removeProperties(obj, properties) {
  for (var i = 0; i < properties.length; i++) {
    if (obj.hasOwnProperty(properties[i])) {
      delete obj[properties[i]];
    }
  }
}

//////////////////////////////////////////////////////////////////////
// Function 16 - Dedup ///////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function dedup(array) {
  return [...new Set(array)];
}

//////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE ////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

if((typeof process !== 'undefined') &&
   (typeof process.versions.node !== 'undefined')) {
    // here, export any references you need for tests //
    module.exports.objectValues = objectValues;
    module.exports.keysToString = keysToString;
    module.exports.valuesToString = valuesToString;
    module.exports.arrayOrObject = arrayOrObject;
    module.exports.capitalizeWord = capitalizeWord;
    module.exports.capitalizeAllWords = capitalizeAllWords;
    module.exports.welcomeMessage = welcomeMessage;
    module.exports.profileInfo = profileInfo;
    module.exports.maybeNoises = maybeNoises;
    module.exports.hasWord = hasWord;
    module.exports.addFriend = addFriend;
    module.exports.isFriend = isFriend;
    module.exports.nonFriends = nonFriends;
    module.exports.updateObject = updateObject;
    module.exports.removeProperties = removeProperties;
    module.exports.dedup = dedup;
}